# EXAMPLE OF A PATTERN 
# Pattern X : KVM
#  vmppattern.X.argsprefix=/opt/google/chrome/chrome # Prefix that the process arguments must have to be considered as a VM process. 
#  vmppattern.X.regex.0=id;;;--channel=(.*?)         # Regex 1, name 'id', regex '--channel=(.*?)'
#  vmppattern.X.regex.1=type;;;--type=(.*?)          # Note that the name&regex separator is ';;;'
#  vmppattern.X.regex.2=lang;;;--lang=(.*?)  


# Pattern 0 : KVM
vmppattern.0.name=kvm
vmppattern.0.expattern=/usr/bin/kvm(.*)
vmppattern.0.regex.0=vcores;;;,cores=([0-9]+?),
vmppattern.0.regex.1=id;;;-name (.*?) -
vmppattern.0.regex.2=uuid;;;-uuid (.*?) -
vmppattern.0.regex.3=drive;;;-drive file=(.*?) -device
vmppattern.0.regex.4=net;;;id=(.{1,10}?),mac
vmppattern.0.regex.5=vnc;;;-vnc (.*?) -k
vmppattern.0.regex.6=mac;;;,mac=([0-9a-fA-F:]{17}),bus

# Allocated memory [MiB].i
vmppattern.0.regex.7=memory.allocatedmb;;;-m ([0-9]{2,5}?) -
#vmppattern.0.regex.1=sockets;;;,sockets=([0-9]+?),
#vmppattern.0.regex.2=threads;;;,threads=([0-9]+?) 

# Pattern 1 : KVM
vmppattern.1.name=kvmtest
vmppattern.1.expattern=(.*)/usr/bin/kvm(.*)
vmppattern.1.regex.0=vcores;;;,cores=([0-9]+?),
vmppattern.1.regex.1=id;;;-name (.*?) -
vmppattern.1.regex.2=uuid;;;-uuid (.*?) -
vmppattern.1.regex.3=drive;;;-drive file=(.*?) -device
vmppattern.1.regex.4=net;;;id=(.{1,10}?),mac
vmppattern.1.regex.5=vnc;;;-vnc (.*?) -k
vmppattern.1.regex.6=mac;;;,mac=([0-9a-fA-F:]{17}),bus

# Allocated memory [MiB].i
vmppattern.2.regex.7=memory.allocatedmb;;;-m ([0-9]{2,5}?) -
#vmppattern.2.regex.1=sockets;;;,sockets=([0-9]+?),
#vmppattern.2.regex.2=threads;;;,threads=([0-9]+?) 